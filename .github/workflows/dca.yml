name: DCA Weekdays (Upbit)

on:
  schedule:
    - cron: "0 * * * 1-5"    # 평일 매시 정각(UTC) 실행 → 파이썬이 04~10시 KST & +30분 윈도우에서만 주문
  workflow_dispatch: {}

env:
  # 시간 설정
  ALLOWED_HOURS_KST: "4,5,6,7,8,9,10"  # 새벽 4시 ~ 오전 10시 (KST) 매시간 시도
  WINDOW_MINUTES: "30"                 # 각 정시 시작 후 30분까지 주문 가능
  STRICT_TIME_ONLY: "true"

  # 예산/수수료/정지
  DAILY_BUDGET_KRW: "40000"
  UPBIT_KRW_FEE: "0.0005"
  UPBIT_MIN_ORDER_KRW: "5000"
  DCA_PAUSE: "0"

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install requests tzdata pyjwt

      - name: Run DCA bot
        env:
          UPBIT_ACCESS_KEY:   ${{ secrets.UPBIT_ACCESS_KEY }}
          UPBIT_SECRET_KEY:   ${{ secrets.UPBIT_SECRET_KEY }}
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          ALLOWED_HOURS_KST:  ${{ env.ALLOWED_HOURS_KST }}
          WINDOW_MINUTES:     ${{ env.WINDOW_MINUTES }}
          STRICT_TIME_ONLY:   ${{ env.STRICT_TIME_ONLY }}
          DAILY_BUDGET_KRW:   ${{ env.DAILY_BUDGET_KRW }}
          UPBIT_KRW_FEE:      ${{ env.UPBIT_KRW_FEE }}
          UPBIT_MIN_ORDER_KRW: ${{ env.UPBIT_MIN_ORDER_KRW }}
          DCA_PAUSE:          ${{ env.DCA_PAUSE }}
        run: |
          python upbit_noon_weekday_dca.py

  notify:
    name: Notify Telegram (summary)
    needs: [run]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Build message
        id: mk
        shell: bash
        run: |
          if [ "${{ needs.run.result }}" = "success" ]; then
            STATUS="✅ SUCCESS"
          else
            STATUS="❌ FAILURE"
          fi
          MSG="[${GITHUB_REPOSITORY}] ${{ github.workflow }} #${{ github.run_number }} → ${STATUS}\nEvent: ${{ github.event_name }}\nBranch: ${{ github.ref_name }}\nActor: ${{ github.actor }}\nURL: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          echo "msg=${MSG}" >> "$GITHUB_OUTPUT"

      - name: Send Telegram
        env:
          TOKEN:   ${{ secrets.TELEGRAM_BOT_TOKEN }}
          CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TEXT:    ${{ steps.mk.outputs.msg }}
        run: |
          curl -s "https://api.telegram.org/bot${TOKEN}/sendMessage" \
            --data-urlencode "chat_id=${CHAT_ID}" \
            --data-urlencode "text=${TEXT}"
